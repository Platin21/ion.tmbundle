%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Ion
file_extensions:
  - ion
scope: source.ion
contexts:
  main:
    - match: \b(if|while|for|return|struct|switch|default|continue|break|case|typedef|else|enum|do|union|get_typeof|defer|import)\b
      scope: keyword.control.ion
    - match: (func)\s+(.+)\(
      captures:
        1: keyword.control.ion
        2: entity.name.function.ion
    - match: '(:)\s*([a-zA-Z0-9_]*\s*(const|static){0,1}\s*)((\*|\[\])*)\s*(\{|\;|\n)'
      captures:
        1: keyword.operator.assignment.ion
        2: storage.type.ion
        3: storage.type.ion
        4: keyword.others.qualifiere.ion
    - match: '([a-zA-Z0-9_]+)(:)\s*(func)'
      captures:
        1: entity.name.tag.ion
        2: keyword.operator.assignment.ion
        3: storage.type.ion
        4: keyword.others.qualifiere.ion
    - match: '([a-zA-Z0-9_]+)\s*(:)\s*([a-zA-Z0-9_]+\s*(const|static){0,1}\s*)\s*((\*|\[\])*)\s*(,|\){1})'
      captures:
        1: entity.name.tag.ion
        2: keyword.operator.assignment.ion
        3: storage.type.ion
        4: storage.type.ion
        5: keyword.others.qualifiere.ion
    - match: '([a-zA-Z0-9_]+)\s*(:{1})\s*([\[\]])*\s*(,|\))'
      scope: invalid.illegal.paren_or_zero.ion
    - match: (true|false|NULL)
      scope: constant.language.ion
    - match: '([0-9]+(\.)[0-9]+)d*'
      scope: constant.numeric.float.ion
    - match: '\b0b([0-1]+)(l|u|ll|ull)*\b'
      scope: constant.numeric.decimal.ion
    - match: '\b0x([0-9A-Fa-f]+)(l|u|ll|ull)*\b'
      scope: constant.numeric.hex.ion
    - match: '\b([0-9]+)(l|u|ll|ull)*\b'
      scope: constant.numeric.decimal.ion
    - match: \bsizeof|offsetof|typeof|alignof\b
      scope: keyword.operator.sizeof.ion
    - match: (#|@)foreign
      scope: meta.preprocessor.macro.ion
    - match: \#static_assert
      scope: meta.preprocessor.macro.ion
    - match: /\*.*\*/
      scope: comment.line.block.ion
    - match: /\*
      push:
        - meta_scope: comment.line.block.ion
        - match: \*/
          pop: true
    - match: '\b([a-zA-Z_][a-zA-Z0-9_]+)\s*(:{1})\s*([a-zA-Z_][a-zA-Z0-9_]*)\s*((\*|\[([a-zA-Z0-9_]*)\])*)\s*\;'
      captures:
        2: keyword.operator.assignment.ion
        3: storage.type.ion
        4: keyword.others.qualifiere.ion
        6: constant.numeric.hex.ion
    - match: '(var|const)\s+([a-zA-Z_][a-zA-Z0-9_]*)((:{1})\s*([a-zA-Z_][a-zA-Z0-9_]*)){0,1}'
      captures:
        1: keyword.control.ion
        4: keyword.operator.assignment.ion
        5: storage.type.ion
    - match: \b(void|bool)\b
      scope: storage.type.others.ion
    - match: \b(char|schar|uchar)\b
      scope: storage.type.charackter.ion
    - match: \b(float|double)\b
      scope: storage.type.fraction.ion
    - match: \b(short|int|long|llong|int8|int16|int32|int64)\b
      scope: storage.type.whole.ion
    - match: \b(ushort|uint|ulong|ullong|uint8|uint16|uint32|uint64)\b
      scope: storage.type.unsigned.whole.ion
    - match: (==|<=|>=|>|<|\|\|)
      scope: keyword.operator.logic.ion
    - match: (~|\^|&&|&)
      scope: keyword.operator.binary.ion
    - match: (:=|=)+
      scope: keyword.operator.assignment.ion
    - match: //.*\n
      scope: comment.line.double-slash.ion
    - match: (\+\+|\-\-|\+|\-|\-\=|\*|/)
      scope: keyword.operator.math.ion
    - match: '\((\:)([^)}]*]*(\*)*)\)'
      captures:
        1: keyword.operator.assignment.ion
        2: storage.type.ion
        3: keyword.operator.assignment.ion
    - match: '"""'
      push:
        - meta_scope: string.quoted.triple.ion
        - match: '"""'
          pop: true
        - match: \\(r|n|t|v|a|b)
          scope: constant.character.escape.ion
        - match: "%(d|u|l|ul|ll|ull|f)"
          scope: constant.character.other.ion
    - match: '"'
      push:
        - meta_scope: string.quoted.double.ion
        - match: '"'
          pop: true
        - match: \\(r|n|t|v|a|b)
          scope: constant.character.escape.ion
        - match: "%(d|ull|ul|ll|u|l|f)"
          scope: constant.character.other.ion
    - match: \'
      push:
        - meta_scope: string.quoted.single.ion
        - match: \'
          pop: true
        - match: \\(r|n|t|v|a|b)
          scope: constant.character.escape.ion
